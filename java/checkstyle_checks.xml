<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Check Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
    This configuration file was written by the eclipse-cs plugin configuration editor
-->
<!--
    Checkstyle-Configuration: Copy of maven-checkstyle-plugin validate
    Description: 
maven-checkstyle-plugin configuration validate
-->
<module name="Checker">
  <property name="severity" value="error"/>
  <property name="cacheFile" value="${checkstyle.cache.file}"/>
  <property name="fileExtensions" value="java, properties, xml, vm, g, g4, dtd"/>
  <metadata name="org.checkstyle.principle.description" value="In our config we should use all Checks that Checkstyle has"/>
  <metadata name="org.checkstyle.principle" value="Practice What You Preach"/>
  <module name="TreeWalker">
    <property name="tabWidth" value="4"/>
    <module name="MissingDeprecated"/>
    <module name="MissingOverride">
      <property name="javaFiveCompatibility" value="true"/>
    </module>
    <module name="SuppressWarningsHolder"/>
    <module name="AvoidNestedBlocks">
      <property name="allowInSwitchCase" value="true"/>
    </module>
    <module name="EmptyBlock">
      <property name="option" value="text"/>
      <property name="tokens" value="STATIC_INIT"/>
    </module>
    <module name="EmptyCatchBlock"/>
    <module name="LeftCurly"/>
    <module name="NeedBraces"/>
    <module name="NeedBraces">
      <property name="tokens" value="LAMBDA"/>
      <property name="allowSingleLineStatement" value="true"/>
    </module>
    <module name="RightCurly">
      <property name="option" value="alone"/>
      <property name="tokens" value="LITERAL_TRY"/>
    </module>
    <module name="RightCurly">
      <property name="tokens" value="LITERAL_DO"/>
    </module>
    <module name="DesignForExtension">
      <property name="ignoredAnnotations" value="Override, Test, Before, After, BeforeClass, AfterClass"/>
    </module>
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InnerTypeLast"/>
    <module name="InterfaceIsType"/>
    <module name="MutableException"/>
    <module name="OneTopLevelClass"/>
    <module name="ThrowsCount">
      <property name="max" value="2"/>
    </module>
    <module name="VisibilityModifier"/>
    <module name="ArrayTrailingComma"/>
    <module name="AvoidInlineConditionals"/>
    <module name="CovariantEquals"/>
    <module name="DeclarationOrder"/>
    <module name="DefaultComesLast"/>
    <module name="EmptyStatement"/>
    <module name="EqualsAvoidNull"/>
    <module name="EqualsHashCode"/>
    <module name="ExplicitInitialization"/>
    <module name="FallThrough"/>
    <module name="FinalLocalVariable"/>
    <module name="HiddenField">
      <property name="ignoreConstructorParameter" value="true"/>
      <property name="ignoreSetter" value="true"/>
      <property name="setterCanReturnItsClass" value="true"/>
    </module>
    <module name="IllegalCatch">
      <property name="illegalClassNames" value="java.lang.Exception,                          java.lang.Throwable,                          java.lang.RuntimeException,                          java.lang.NullPointerException"/>
    </module>
    <module name="IllegalInstantiation">
      <property name="classes" value="org.xml.sax.SAXException, org.xml.sax.SAXParseException,                          org.apache.commons.beanutils.ConversionException,                          org.antlr.v4.runtime.misc.ParseCancellationException,                          antlr.RecognitionException, antlr.TokenStreamException,                          antlr.TokenStreamRecognitionException, antlr.ANTLRException"/>
    </module>
    <module name="IllegalThrows"/>
    <module name="IllegalToken">
      <property name="tokens" value="LITERAL_ASSERT"/>
    </module>
    <module name="IllegalTokenText">
      <property name="tokens" value="STRING_LITERAL"/>
      <property name="format" value="^(US-ASCII|ISO-8859-1|UTF-8|UTF-16BE|UTF-16LE|UTF-16)$"/>
      <property name="ignoreCase" value="true"/>
    </module>
    <module name="IllegalType"/>
    <module name="InnerAssignment"/>
    <module name="MagicNumber"/>
    <module name="MissingCtor">
      <property name="severity" value="ignore"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <module name="MissingSwitchDefault"/>
    <module name="ModifiedControlVariable"/>
    <module name="MultipleStringLiterals"/>
    <module name="MultipleVariableDeclarations"/>
    <module name="NestedForDepth">
      <property name="max" value="2"/>
    </module>
    <module name="NestedIfDepth">
      <property name="max" value="3"/>
    </module>
    <module name="NestedTryDepth"/>
    <module name="NoClone"/>
    <module name="NoFinalizer"/>
    <module name="OneStatementPerLine"/>
    <module name="OverloadMethodsDeclarationOrder"/>
    <module name="PackageDeclaration"/>
    <module name="ParameterAssignment"/>
    <module name="RequireThis"/>
    <module name="ReturnCount">
      <property name="max" value="1"/>
      <property name="maxForVoid" value="0"/>
    </module>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="StringLiteralEquality"/>
    <module name="SuperClone"/>
    <module name="SuperFinalize"/>
    <module name="UnnecessaryParentheses"/>
    <module name="VariableDeclarationUsageDistance"/>
    <module name="SuppressionCommentFilter">
      <property name="offCommentFormat" value="CSOFF\: .*"/>
      <property name="onCommentFormat" value="CSON\: .*"/>
      <property name="checkFormat" value="IGNORETHIS"/>
    </module>
    <module name="SuppressionXpathFilter">
      <property name="file" value="${checkstyle.suppressions-xpath.file}"/>
    </module>
    <module name="SuppressWithNearbyCommentFilter">
      <property name="commentFormat" value="-@cs\[(\w{8,}(\|\w{8,})*)\] \w[\(\)\-\.\'\`\,\:\;\w ]{10,}"/>
      <property name="checkFormat" value="$1"/>
      <property name="influenceFormat" value="3"/>
    </module>
    <module name="AvoidStarImport"/>
    <module name="AvoidStaticImport"/>
    <module name="CustomImportOrder">
      <property name="customImportOrderRules" value="STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS"/>
      <property name="specialImportsRegExp" value="^org\."/>
      <property name="sortImportsInGroupAlphabetically" value="true"/>
    </module>
    <module name="IllegalImport"/>
    <module name="ImportControl">
      <property name="id" value="ImportControlMain"/>
      <property name="file" value="${checkstyle.importcontrol.file}"/>
      <property name="path" value="^.*[\\/]src[\\/]main[\\/].*$"/>
    </module>
    <module name="ImportControl">
      <property name="id" value="ImportControlTest"/>
      <property name="file" value="${checkstyle.importcontroltest.file}"/>
      <property name="path" value="^.*[\\/]src[\\/]test[\\/].*$"/>
    </module>
    <module name="ImportOrder">
      <property name="option" value="top"/>
      <property name="groups" value="/^java\./,javax,org"/>
      <property name="separated" value="true"/>
      <property name="sortStaticImportsAlphabetically" value="true"/>
    </module>
    <module name="RedundantImport"/>
    <module name="UnusedImports"/>
    <module name="AtclauseOrder"/>
    <module name="JavadocMethod">
      <property name="validateThrows" value="true"/>
      <property name="allowUndeclaredRTE" value="true"/>
      <property name="allowThrowsTagsForSubclasses" value="true"/>
      <property name="allowMissingPropertyJavadoc" value="true"/>
    </module>
    <module name="JavadocParagraph"/>
    <module name="JavadocStyle">
      <property name="scope" value="public"/>
    </module>
    <module name="JavadocTagContinuationIndentation"/>
    <module name="JavadocType">
      <property name="allowUnknownTags" value="true"/>
    </module>
    <module name="JavadocVariable"/>
    <module name="NonEmptyAtclauseDescription"/>
    <module name="SingleLineJavadoc"/>
    <module name="WriteTag"/>
    <module name="SummaryJavadoc"/>
    <module name="BooleanExpressionComplexity">
      <property name="max" value="7"/>
    </module>
    <module name="ClassDataAbstractionCoupling">
      <property name="excludedClasses" value="boolean, byte, char, double, float, int, long, short, void,                          Boolean, Byte, Character, Double, Float, Integer, Long, Short, Void,                          Object, Class, String, StringBuffer, StringBuilder,                          ArrayIndexOutOfBoundsException, Exception, RuntimeException,                          IllegalArgumentException, IllegalStateException,                          IndexOutOfBoundsException, NullPointerException, Throwable,                          SecurityException, UnsupportedOperationException, List, ArrayList,                          Deque, Queue, LinkedList, Set, HashSet, SortedSet, TreeSet, Map,                          HashMap, SortedMap, TreeMap, DetailsAST, CheckstyleException,                          UnsupportedEncodingException, BuildException, ConversionException,                          FileNotFoundException, TestException"/>
    </module>
    <module name="ClassFanOutComplexity">
      <property name="max" value="25"/>
      <property name="excludedClasses" value="boolean, byte, char, double, float, int, long, short,                          void, Boolean, Byte, Character, Double, Float, Integer,                          Long, Short, Void, Object, Class, String, StringBuffer,                          StringBuilder, ArrayIndexOutOfBoundsException, Exception,                          RuntimeException, IllegalArgumentException, IllegalStateException,                          IndexOutOfBoundsException, NullPointerException, Throwable,                          SecurityException, UnsupportedOperationException, List, ArrayList,                          Deque, Queue, LinkedList, Set, HashSet, SortedSet, TreeSet, Map,                          HashMap, SortedMap, TreeMap, DetailsAST, CheckstyleException,                          UnsupportedEncodingException, BuildException, ConversionException,                          FileNotFoundException, TestException, Log, Sets, Multimap,                          TokenStreamRecognitionException, RecognitionException,                          TokenStreamException, IOException, Override, Deprecated, SafeVarargs,                          SuppressWarnings, FunctionalInterface"/>
    </module>
    <module name="CyclomaticComplexity">
      <property name="switchBlockAsSingleDecisionPoint" value="true"/>
    </module>
    <module name="JavaNCSS"/>
    <module name="NPathComplexity"/>
    <module name="ArrayTypeStyle"/>
    <module name="AvoidEscapedUnicodeCharacters">
      <property name="allowIfAllCharactersEscaped" value="true"/>
    </module>
    <module name="CommentsIndentation"/>
    <module name="DescendantToken"/>
    <module name="FinalParameters">
      <property name="severity" value="ignore"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <module name="Indentation">
      <property name="throwsIndent" value="8"/>
    </module>
    <module name="OuterTypeFilename"/>
    <module name="TodoComment">
      <property name="format" value="(TODO)|(FIXME)"/>
    </module>
    <module name="TrailingComment"/>
    <module name="UncommentedMain">
      <property name="excludedClasses" value="\.(Main|JavadocPropertiesGenerator)$"/>
    </module>
    <module name="UpperEll"/>
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>
    <module name="InterfaceMemberImpliedModifier">
      <property name="severity" value="ignore"/>
      <metadata name="net.sf.eclipsecs.core.lastEnabledSeverity" value="inherit"/>
    </module>
    <module name="AbbreviationAsWordInName">
      <property name="allowedAbbreviationLength" value="0"/>
      <property name="allowedAbbreviations" value="AST"/>
      <property name="ignoreFinal" value="false"/>
    </module>
    <module name="AbstractClassName"/>
    <module name="ClassTypeParameterName"/>
    <module name="ConstantName"/>
    <module name="InterfaceTypeParameterName"/>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName">
      <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
      <property name="allowOneCharVarInForLoop" value="true"/>
    </module>
    <module name="MemberName">
      <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
    </module>
    <module name="MethodName"/>
    <module name="MethodTypeParameterName"/>
    <module name="PackageName"/>
    <module name="ParameterName">
      <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
      <property name="ignoreOverridden" value="true"/>
    </module>
    <module name="LambdaParameterName">
      <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
    </module>
    <module name="CatchParameterName">
      <property name="format" value="^(ex|[a-z][a-z][a-zA-Z]+)$"/>
    </module>
    <module name="StaticVariableName">
      <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
    </module>
    <module name="TypeName"/>
    <module name="Regexp"/>
    <module name="RegexpSinglelineJava"/>
    <module name="RegexpSinglelineJava">
      <property name="format" value="[^\p{ASCII}]"/>
      <property name="ignoreComments" value="true"/>
    </module>
    <module name="AnonInnerLength"/>
    <module name="ExecutableStatementCount"/>
    <module name="LineLength">
      <property name="ignorePattern" value="^ *\* *([^ ]+|\{@code .*|&lt;a href.*)$"/>
      <property name="max" value="100"/>
    </module>
    <module name="MethodCount">
      <property name="maxTotal" value="34"/>
    </module>
    <module name="MethodLength"/>
    <module name="OuterTypeNumber"/>
    <module name="ParameterNumber"/>
    <module name="EmptyForInitializerPad"/>
    <module name="EmptyForIteratorPad"/>
    <module name="EmptyLineSeparator">
      <property name="allowNoEmptyLineBetweenFields" value="true"/>
      <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
    </module>
    <module name="GenericWhitespace"/>
    <module name="MethodParamPad"/>
    <module name="NoLineWrap"/>
    <module name="NoWhitespaceAfter">
      <property name="tokens" value="METHOD_REF"/>
    </module>
    <module name="NoWhitespaceBefore"/>
    <module name="NoWhitespaceBefore">
      <property name="allowLineBreaks" value="true"/>
      <property name="tokens" value="METHOD_REF"/>
    </module>
    <module name="OperatorWrap">
      <property name="tokens" value="METHOD_REF"/>
    </module>
    <module name="OperatorWrap">
      <property name="option" value="eol"/>
      <property name="tokens" value="BAND_ASSIGN"/>
    </module>
    <module name="ParenPad"/>
    <module name="SeparatorWrap">
      <property name="option" value="nl"/>
      <property name="tokens" value="METHOD_REF"/>
    </module>
    <module name="SeparatorWrap">
      <property name="option" value="EOL"/>
      <property name="tokens" value="SEMI"/>
    </module>
    <module name="SingleSpaceSeparator"/>
    <module name="TypecastParenPad"/>
    <module name="WhitespaceAfter"/>
    <module name="WhitespaceAround"/>
  </module>
  <module name="BeforeExecutionExclusionFileFilter">
    <property name="fileNamePattern" value="module\-info\.java$"/>
  </module>
  <module name="SeverityMatchFilter">
    <property name="severity" value="ignore"/>
    <property name="acceptOnMatch" value="false"/>
  </module>
  <module name="SuppressionFilter">
    <property name="file" value="${checkstyle.suppressions.file}"/>
  </module>
  <module name="SuppressWarningsFilter"/>
  <module name="SuppressWithPlainTextCommentFilter">
    <property name="offCommentFormat" value="CSOFF\: .*"/>
    <property name="onCommentFormat" value="CSON\: .*"/>
    <property name="checkFormat" value="IGNORETHIS"/>
  </module>
  <module name="Header">
    <property name="id" value="header"/>
    <property name="headerFile" value="${checkstyle.header.file}"/>
    <property name="fileExtensions" value="java"/>
  </module>
  <module name="RegexpHeader">
    <property name="headerFile" value="${checkstyle.regexp.header.file}"/>
    <property name="fileExtensions" value="java"/>
  </module>
  <module name="JavadocPackage"/>
  <module name="NewlineAtEndOfFile"/>
  <module name="Translation">
    <property name="requiredTranslations" value="de, fr, fi, es, pt, ja, tr, zh"/>
  </module>
  <module name="UniqueProperties"/>
  <module name="RegexpMultiline"/>
  <module name="RegexpMultiline">
    <property name="format" value="\r?\n[\t ]*\r?\n[\t ]*\r?\n"/>
    <property name="message" value="Unnecessary consecutive lines"/>
    <property name="fileExtensions" value="java,xml,properties"/>
  </module>
  <module name="RegexpMultiline">
    <property name="format" value="/\*\*\W+\* +\p{javaLowerCase}"/>
    <property name="message" value="First sentence in a comment should start with a capital letter"/>
    <property name="fileExtensions" value="java"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="\s+$"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="/\*\* +\p{javaLowerCase}"/>
    <property name="message" value="First sentence in a comment should start with a capital letter"/>
    <property name="fileExtensions" value="java"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="^(?!(.*http|import)).{101,}$"/>
    <property name="message" value="Line should not be longer then 100 symbols"/>
    <property name="fileExtensions" value="g, g4"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="^(?!(.*href=&quot;|.*http)).{101,}$"/>
    <property name="message" value="Line should not be longer then 100 symbols"/>
    <property name="fileExtensions" value="xml, vm"/>
  </module>
  <module name="RegexpOnFilename"/>
  <module name="RegexpOnFilename">
    <property name="folderPattern" value="[\\/]src[\\/]\w+[\\/]java[\\/]"/>
    <property name="fileNamePattern" value="\.java$"/>
    <property name="match" value="false"/>
    <message key="regexp.filepath.mismatch" value="Only java files should be located in the ''src/*/java'' folders."/>
  </module>
  <module name="RegexpOnFilename">
    <property name="folderPattern" value="[\\/]src[\\/]xdocs[\\/]"/>
    <property name="fileNamePattern" value="\.(xml)|(vm)$"/>
    <property name="match" value="false"/>
    <message key="regexp.filepath.mismatch" value="All files in the ''src/xdocs'' folder should have the ''xml'' or ''vm'' extension."/>
  </module>
  <module name="RegexpOnFilename">
    <property name="folderPattern" value="[\\/]src[\\/]it[\\/]java[\\/]"/>
    <property name="fileNamePattern" value="^((\w+Test)|(\w+TestSupport)|(Abstract\w+))\.java$"/>
    <property name="match" value="false"/>
    <message key="regexp.filepath.mismatch" value="All files in the ''src/it/java'' folder                       should be named ''*Test.java'' or ''Abstract*.java''."/>
  </module>
  <module name="FileLength">
    <property name="fileExtensions" value="java"/>
  </module>
  <module name="FileTabCharacter"/>
</module>
